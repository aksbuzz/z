# one liner
for f in /home/z/Desktop/Remasters/*.wav; do lame $f $f.mp3; done

# another
find . -depth -iname “*.wav” -exec sh -c ‘lame -V0 -h -b 160 –vbr-new “$1” “${1%.wav}.mp3″‘ _ {} \;


#!/bin/bash
# script, needs lame
SAVEIF=$IFS
IFS=$(echo -en "\n\b")

for file in $(ls *wav)
do
  name=${file%%.wav}
  lame -V0 -h -b 160 --vbr-new $name.wav $name.mp3
done


#!/bin/sh
# another script, sh compat (is the other not?)
# uses lame and faad2

for i in *.wav; do
 if [ -e "$i" ]; then
    file=`basename "$i" .wav`
    lame -h -b 192 "$i" "$file.mp3"
  fi
done



# this one's the reverse, as a bash function
mp3towav(){
	[[ $# -eq 0 ]] && { echo "mp3wav mp3file"; exit 1; }
	for i in "$@"
	do
		# create .wav file name
		local out="${i%/*}.wav"
		[[ -f "$i" ]] && { echo -n "Processing ${i}..."; mpg123 -w "${out}" "$i" &>/dev/null  && echo "done." || echo "failed."; }
	done
}


# yet another script?
#!/bin/bash
LAMEOPTS=""

if [ "$#" -gt 0 ]; then
  LAMEOPTS="$*"
else
  LAMEOPTS="-m j -h -V 3 --vbr-new"
  echo "no arguments. Assuming: $LAMEOPTS ."
fi

for FILE in *.wav ; do
    OUTNAME=`basename "$FILE" .wav`.mp3
    lame $LAMEOPTS "$FILE" "$OUTNAME"
done




#! /bin/bash
# convert.sh
# Convert all .wav files in this and all sub directories to .mp3
# Optional: Delete .wav files after conversion

export IFS=$'\n';
time for song in $(find -type f -iname '*.wav' |sed 's!\.wav$!!');
do
  echo -n "$song.mp3"
  lame -h -S "$song.wav" "$song.mp3";
  # uncomment the next line to delete .wav after conversion.
  #rm "$song.wav";  
  echo -n " ";
done




export IFS=$'\n';for song in $(find -type f -iname '*.wav' |sed 's!\.wav$!!');do lame -h "$song.wav" "$song.mp3";done



#!/usr/bin/env bash
while read filename
do
  lame -V2 "$filename" "${filename/.wav}.mp3"
done < <( find "$HOME/Desktop/Remasters" -name "*.wav" )



#!/usr/bin/env python

# python; ogg to mp3; could easily change to other formats
# requires oggdec & lame (for ogg)

import os
import os.path
 
def get_files (extensions):
	files = os.listdir (os.getcwd())
	retfiles = []
	for file in files:
		for extension in extensions:
			if (file.endswith (extension)):
				retfiles.append (file)
	
	return retfiles
		
def convert_to_mp3 ():
	oggfiles = get_files ([ '.ogg', '.ogm'])
	
	for ogg in oggfiles:
		ret1 = os.spawnlp (os.P_WAIT, 'oggdec', 'oggdec', ogg)
		if (ret1 == 0):
			rawfilename = os.path.splitext (ogg)
			wavfilename = rawfilename[0] + '.wav'
			mp3filename = rawfilename[0] + '.mp3'
			ret2 = os.spawnlp (os.P_WAIT, 'lame', 'lame', wavfilename, mp3filename)
			if (ret2 == 0):
				os.spawnlp (os.P_WAIT, 'rm', 'rm', wavfilename)

convert_to_mp3 ()